{"version":3,"file":"timeago.directive.d.ts","sources":["timeago.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnChanges, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { TimeagoClock } from './timeago.clock';\nimport { TimeagoFormatter } from './timeago.formatter';\nimport { TimeagoIntl } from './timeago.intl';\nexport declare class TimeagoDirective implements OnChanges, OnDestroy {\n    private cd;\n    private clock;\n    private intlSubscription;\n    private clockSubscription;\n    /**\n     * Emits on:\n     * - Input change\n     * - Intl change\n     * - Clock tick\n    */\n    stateChanges: Subject<any>;\n    /** The Date to display. An actual Date object or something that can be fed to new Date. */\n    get date(): any;\n    set date(date: any);\n    private _date;\n    /** If the directive should update itself over time */\n    get live(): boolean;\n    set live(live: boolean);\n    private _live;\n    constructor(intl: TimeagoIntl, cd: ChangeDetectorRef, formatter: TimeagoFormatter, element: ElementRef, clock: TimeagoClock);\n    ngOnChanges(): void;\n    setContent(node: any, content: string): void;\n    ngOnDestroy(): void;\n}\n"]}