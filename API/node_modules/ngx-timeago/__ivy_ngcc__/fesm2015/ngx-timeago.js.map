{"version":3,"file":"ngx-timeago.js","sources":["../../../lib/src/util.ts","../../../lib/src/timeago.clock.ts","../../../lib/src/timeago.intl.ts","../../../lib/src/timeago.formatter.ts","../../../lib/src/timeago.directive.ts","../../../lib/src/timeago.pipe.ts","../../../lib/src/timeago.module.ts","../../../lib/src/ngx-timeago.ts"],"names":[],"mappings":"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","sourcesContent":["export function isDefined(value: any): boolean {\n  return typeof value !== 'undefined' && value !== null;\n}\n\nexport function coerceBooleanProperty(value: any): boolean {\n  return value != null && `${value}` !== 'false';\n}\n\nexport function dateParser(date: any): Date {\n  const parsed = new Date(date);\n  if (!Number.isNaN(parsed.valueOf())) {\n    return parsed;\n  }\n\n  const parts: string[] = String(date).match(/\\d+/g);\n  if (parts === null || parts.length <= 2) {\n    return parsed;\n  } else {\n    const [firstP, secondP, ...restPs] = parts.map(x => parseInt(x, 10));\n    return new Date(Date.UTC(firstP, secondP - 1, ...restPs));\n  }\n}\n\nexport const MINUTE = 60;\nexport const HOUR = MINUTE * 60;\nexport const DAY = HOUR * 24;\nexport const WEEK = DAY * 7;\nexport const MONTH = DAY * 30;\nexport const YEAR = DAY * 365;\n","import { Injectable } from '@angular/core';\nimport { Observable, of, empty, timer } from 'rxjs';\nimport { expand, skip } from 'rxjs/operators';\nimport { MINUTE, HOUR, DAY } from './util';\n\nexport abstract class TimeagoClock {\n  abstract tick(then: number): Observable<any>;\n}\n\n@Injectable()\nexport class TimeagoDefaultClock extends TimeagoClock {\n  tick(then: number): Observable<any> {\n    return of(0)\n      .pipe(\n        expand(() => {\n          const now = Date.now();\n          const seconds = Math.round(Math.abs(now - then) / 1000);\n\n          const period =\n            seconds < MINUTE\n              ? 1000\n              : seconds < HOUR\n                ? 1000 * MINUTE\n                : seconds < DAY\n                  ? 1000 * HOUR\n                  : 0;\n\n          return period ? timer(period) : empty();\n        }),\n        skip(1)\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { StringOrFn, NumberArray } from './timeago.formatter';\n\nexport interface IL10nsStrings {\n  prefixAgo?: StringOrFn;\n  prefixFromNow?: StringOrFn;\n  suffixAgo?: StringOrFn;\n  suffixFromNow?: StringOrFn;\n  second?: StringOrFn;\n  seconds?: StringOrFn;\n  minute?: StringOrFn;\n  minutes?: StringOrFn;\n  hour?: StringOrFn;\n  hours?: StringOrFn;\n  day?: StringOrFn;\n  days?: StringOrFn;\n  week?: StringOrFn;\n  weeks?: StringOrFn;\n  month?: StringOrFn;\n  months?: StringOrFn;\n  year?: StringOrFn;\n  years?: StringOrFn;\n  wordSeparator?: string;\n  numbers?: NumberArray;\n};\n\n/**\n * To modify the text displayed, create a new instance of TimeagoIntl and\n * include it in a custom provider\n */\n@Injectable()\nexport class TimeagoIntl {\n\n  strings: IL10nsStrings;\n\n  /**\n   * Stream that emits whenever the l10n strings are changed\n   * Use this to notify directives if the l10n strings have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n}\n","import { Injectable } from '@angular/core';\nimport { TimeagoIntl } from './timeago.intl';\nimport { MINUTE, HOUR, DAY, WEEK, MONTH, YEAR } from './util';\n\nexport type Unit = 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'year';\n\nexport type Suffix = 'ago' | 'from now';\n\nexport type StringOrFn = ((value: number, millisDelta:  number) => string) | string;\n\nexport type NumberArray = [ string, string, string, string, string, string, string, string, string, string ];\n\nconst defaultFormattter = function(then: number): {value: number, unit: Unit, suffix: Suffix} {\n  const now = Date.now();\n  const seconds = Math.round(Math.abs(now - then) / 1000);\n  const suffix: Suffix = then < now ? 'ago' : 'from now';\n\n  const [value, unit]: [number, Unit] =\n    seconds < MINUTE\n      ? [Math.round(seconds), 'second']\n      : seconds < HOUR\n        ? [Math.round(seconds / MINUTE), 'minute']\n        : seconds < DAY\n          ? [Math.round(seconds / HOUR), 'hour']\n          : seconds < WEEK\n            ? [Math.round(seconds / DAY), 'day']\n            : seconds < MONTH\n              ? [Math.round(seconds / WEEK), 'week']\n              : seconds < YEAR\n                ? [Math.round(seconds / MONTH), 'month']\n                : [Math.round(seconds / YEAR), 'year'];\n\n  return {value, unit, suffix};\n}\n\nexport abstract class TimeagoFormatter {\n  abstract format(then: number): string\n}\n\n@Injectable()\nexport class TimeagoDefaultFormatter extends TimeagoFormatter {\n  format(then: number): string {\n    const {suffix, value, unit} = defaultFormattter(then);\n    return this.parse(value, unit, suffix);\n  }\n\n  private parse(value: number, unit: Unit, suffix: Suffix): string {\n    if (value !== 1) {\n      unit += 's';\n    }\n    return value + ' ' + unit + ' ' + suffix;\n  }\n}\n\n@Injectable()\nexport class TimeagoCustomFormatter extends TimeagoFormatter {\n  constructor(private intl: TimeagoIntl) {\n    super();\n  }\n\n  format(then: number): string {\n    const {suffix, value, unit} = defaultFormattter(then);\n    return this.parse(value, unit, suffix, Date.now(), then);\n  }\n\n  private parse(value: number, unit: Unit, suffix: Suffix, now: number, then: number) {\n    /** convert weeks to days if strings don't handle weeks */\n    if (unit === 'week' && !this.intl.strings.week && !this.intl.strings.weeks) {\n      const days = Math.round(Math.abs(now - then) / (1000 * 60 * 60 * 24));\n      value = days;\n      unit = 'day';\n    }\n\n    /** create a normalize function for given value */\n    const normalize = this.normalizeFn(value, now - then, this.intl.strings.numbers);\n\n    /** The eventual return value stored in an array so that the wordSeparator can be used */\n    const dateString: string[] = [];\n\n    /** handle prefixes */\n    if (suffix === 'ago' && this.intl.strings.prefixAgo) {\n      dateString.push(normalize(this.intl.strings.prefixAgo));\n    }\n    if (suffix === 'from now' && this.intl.strings.prefixFromNow) {\n      dateString.push(normalize(this.intl.strings.prefixFromNow));\n    }\n\n    /** Handle Main number and unit */\n    const isPlural = value > 1;\n    if (isPlural) {\n      const stringFn: StringOrFn = this.intl.strings[unit + 's'] || this.intl.strings[unit] || '%d ' + unit;\n      dateString.push(normalize(stringFn));\n    } else {\n      const stringFn: StringOrFn = this.intl.strings[unit] || this.intl.strings[unit + 's'] || '%d ' + unit;\n      dateString.push(normalize(stringFn));\n    }\n\n    /** Handle Suffixes */\n    if (suffix === 'ago' && this.intl.strings.suffixAgo) {\n      dateString.push(normalize(this.intl.strings.suffixAgo));\n    }\n    if (suffix === 'from now' && this.intl.strings.suffixFromNow) {\n      dateString.push(normalize(this.intl.strings.suffixFromNow));\n    }\n\n    /** join the array into a string and return it */\n    const wordSeparator = typeof this.intl.strings.wordSeparator === 'string' ? this.intl.strings.wordSeparator : ' ';\n    return dateString.join(wordSeparator);\n  }\n\n  /**\n   * If the numbers array is present, format numbers with it,\n   * otherwise just cast the number to a string and return it\n  */\n  private normalizeNumber(numbers: NumberArray, value: number) {\n    return numbers && numbers.length === 10\n      ? String(value).split('')\n          .map((digit: string) => digit.match(/^[0-9]$/) ? numbers[parseInt(digit, 10)] : digit)\n          .join('')\n      : String(value);\n  }\n\n  /**\n   * Take a string or a function that takes number of days and returns a string\n   * and provide a uniform API to create string parts\n  */\n  private normalizeFn(value: number, millisDelta: number, numbers?: NumberArray) {\n    return (stringOrFn: StringOrFn) =>\n      typeof stringOrFn === 'function'\n      ? stringOrFn(value, millisDelta).replace(/%d/g, this.normalizeNumber(numbers, value))\n      : stringOrFn.replace(/%d/g, this.normalizeNumber(numbers, value));\n  }\n}\n","import { Directive, Input, ElementRef, Optional, OnChanges, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { Subscription, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { TimeagoClock } from './timeago.clock';\nimport { TimeagoFormatter } from './timeago.formatter';\nimport { TimeagoIntl } from './timeago.intl';\nimport { isDefined, coerceBooleanProperty, dateParser } from './util';\n\n@Directive({\n  selector: '[timeago]',\n  exportAs: 'timeago',\n})\nexport class TimeagoDirective implements OnChanges, OnDestroy {\n  private intlSubscription: Subscription;\n  private clockSubscription: Subscription;\n\n  /**\n   * Emits on:\n   * - Input change\n   * - Intl change\n   * - Clock tick\n  */\n  stateChanges = new Subject<any>();\n\n  /** The Date to display. An actual Date object or something that can be fed to new Date. */\n  @Input()\n  get date(): any {\n    return this._date;\n  }\n  set date(date: any) {\n    this._date = dateParser(date).valueOf();\n    if (this._date) {\n      if (this.clockSubscription) {\n        this.clockSubscription.unsubscribe();\n        this.clockSubscription = undefined;\n      }\n      this.clockSubscription = this.clock.tick(this.date)\n        .pipe(filter(() => this.live, this))\n        .subscribe(() => this.stateChanges.next());\n    } else {\n      throw new SyntaxError(`Wrong parameter in TimeagoDirective. Expected a valid date, received: ${date}`);\n    }\n  }\n  private _date: number;\n\n  /** If the directive should update itself over time */\n  @Input()\n  get live(): boolean {\n    return this._live;\n  }\n  set live(live: boolean) {\n    this._live = coerceBooleanProperty(live);\n  }\n  private _live = true;\n\n  constructor(@Optional() intl: TimeagoIntl,\n              private cd: ChangeDetectorRef,\n              formatter: TimeagoFormatter,\n              element: ElementRef,\n              private clock: TimeagoClock) {\n    if (intl) {\n      this.intlSubscription = intl.changes.subscribe(() => this.stateChanges.next());\n    }\n    this.stateChanges.subscribe(() => {\n      this.setContent(element.nativeElement, formatter.format(this.date));\n      this.cd.markForCheck();\n    });\n  }\n\n  ngOnChanges() {\n    this.stateChanges.next();\n  }\n\n  setContent(node: any, content: string) {\n    if (isDefined(node.textContent)) {\n      node.textContent = content;\n    } else {\n      node.data = content;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.intlSubscription) {\n      this.intlSubscription.unsubscribe();\n      this.intlSubscription = undefined;\n    }\n    if (this.clockSubscription) {\n      this.clockSubscription.unsubscribe();\n      this.clockSubscription = undefined;\n    }\n    this.stateChanges.complete();\n  }\n}\n","import { Injectable, OnDestroy, Pipe, PipeTransform, Optional, ChangeDetectorRef } from '@angular/core';\nimport { Subscription, Subject } from 'rxjs';\nimport { TimeagoClock } from './timeago.clock';\nimport { TimeagoFormatter } from './timeago.formatter';\nimport { TimeagoIntl } from './timeago.intl';\nimport { isDefined, coerceBooleanProperty, dateParser } from './util';\nimport { filter } from 'rxjs/operators';\n\n@Injectable()\n@Pipe({\n  name: 'timeago',\n  pure: false, // required to update the value when stateChanges emits\n})\nexport class TimeagoPipe implements PipeTransform, OnDestroy {\n  private intlSubscription: Subscription;\n  private clockSubscription: Subscription;\n\n  private date: number;\n  private value: string;\n  private live = true;\n\n  /**\n   * Emits on:\n   * - Input change\n   * - Intl change\n   * - Clock tick\n  */\n  stateChanges = new Subject<void>();\n\n  constructor(@Optional() intl: TimeagoIntl,\n    cd: ChangeDetectorRef,\n    formatter: TimeagoFormatter,\n    private clock: TimeagoClock) {\n    if (intl) {\n      this.intlSubscription = intl.changes.subscribe(() => this.stateChanges.next());\n    }\n    this.stateChanges.subscribe(() => {\n      this.value = formatter.format(this.date);\n      cd.markForCheck();\n    });\n  }\n\n  transform(date: any, ...args: any[]) {\n    const _date = dateParser(date).valueOf();\n    let _live: boolean;\n\n    _live = isDefined(args[0])\n      ? coerceBooleanProperty(args[0])\n      : this.live;\n\n    if (this.date === _date && this.live === _live) {\n      return this.value;\n    }\n\n    this.date = _date;\n    this.live = _live;\n\n    if (this.date) {\n      if (this.clockSubscription) {\n        this.clockSubscription.unsubscribe();\n        this.clockSubscription = undefined;\n      }\n      this.clockSubscription = this.clock.tick(this.date)\n        .pipe(filter(() => this.live, this))\n        .subscribe(() => this.stateChanges.next());\n      this.stateChanges.next();\n    } else {\n      throw new SyntaxError(`Wrong parameter in TimeagoPipe. Expected a valid date, received: ${date}`);\n    }\n\n    return this.value;\n  }\n\n  ngOnDestroy() {\n    if (this.intlSubscription) {\n      this.intlSubscription.unsubscribe();\n      this.intlSubscription = undefined;\n    }\n    if (this.clockSubscription) {\n      this.clockSubscription.unsubscribe();\n      this.clockSubscription = undefined;\n    }\n    this.stateChanges.complete();\n  }\n}\n","import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\nimport { TimeagoDirective } from './timeago.directive';\nimport { TimeagoPipe } from './timeago.pipe';\nimport { TimeagoClock, TimeagoDefaultClock } from './timeago.clock';\nimport { TimeagoFormatter, TimeagoDefaultFormatter } from './timeago.formatter';\n\nexport interface TimeagoModuleConfig {\n  clock?: Provider;\n  intl?: Provider;\n  formatter?: Provider;\n}\n\n@NgModule({\n  declarations: [\n    TimeagoDirective,\n    TimeagoPipe,\n  ],\n  exports: [\n    TimeagoDirective,\n    TimeagoPipe,\n  ],\n})\nexport class TimeagoModule {\n  /**\n   * Use this method in your root module to provide the TimeagoModule\n   */\n  static forRoot(config: TimeagoModuleConfig = {}): ModuleWithProviders<TimeagoModule> {\n    return {\n      ngModule: TimeagoModule,\n      providers: [\n        config.clock || {provide: TimeagoClock, useClass: TimeagoDefaultClock},\n        config.intl || [],\n        config.formatter || {provide: TimeagoFormatter, useClass: TimeagoDefaultFormatter},\n      ],\n    };\n  }\n\n  /**\n   * Use this method in your other (non root) modules to import the directive/pipe\n   */\n  static forChild(config: TimeagoModuleConfig = {}): ModuleWithProviders<TimeagoModule> {\n    return {\n      ngModule: TimeagoModule,\n      providers: [\n        config.clock || {provide: TimeagoClock, useClass: TimeagoDefaultClock},\n        config.intl || [],\n        config.formatter || {provide: TimeagoFormatter, useClass: TimeagoDefaultFormatter},\n      ],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}