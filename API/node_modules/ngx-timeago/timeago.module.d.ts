import { ModuleWithProviders, Provider } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './timeago.directive';
import * as ɵngcc2 from './timeago.pipe';
export interface TimeagoModuleConfig {
    clock?: Provider;
    intl?: Provider;
    formatter?: Provider;
}
export declare class TimeagoModule {
    /**
     * Use this method in your root module to provide the TimeagoModule
     */
    static forRoot(config?: TimeagoModuleConfig): ModuleWithProviders<TimeagoModule>;
    /**
     * Use this method in your other (non root) modules to import the directive/pipe
     */
    static forChild(config?: TimeagoModuleConfig): ModuleWithProviders<TimeagoModule>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<TimeagoModule, [typeof ɵngcc1.TimeagoDirective, typeof ɵngcc2.TimeagoPipe], never, [typeof ɵngcc1.TimeagoDirective, typeof ɵngcc2.TimeagoPipe]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<TimeagoModule>;
}

//# sourceMappingURL=timeago.module.d.ts.map